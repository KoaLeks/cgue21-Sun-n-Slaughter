#version 430 core


uniform vec3 lightPosition;
//uniform vec3 diffuseMaterial;
//uniform vec3 ambientMaterial;
//uniform vec3 specularMeterial;
//uniform float shininess;

in vec3 normal;
in vec3 position;

out vec4 color;

void main(){
	
	// learnOpenGL

	vec3 objectColor = vec3(0.4, 0.25, 0.12);

	vec3 lightColor = vec3(1, 0.6, 0.2);
	vec3 lightDir = normalize(lightPosition - position);
	
    float ambientStrength = 0.3;
    vec3 ambient = ambientStrength * lightColor;

	float diff = max(dot(normal, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;
		
	vec3 result = (ambient + diffuse) * objectColor;

	color = vec4(result, 1);
	//color = vec4(normal, 1);
}